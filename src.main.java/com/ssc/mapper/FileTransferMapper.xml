<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace命名空间，作用就是对sql进行分类化管理，理解sql隔离 
注意：使用mapper代理方法开发，namespace有特殊重要的作用，namespace等于mapper接口地址
-->
<mapper namespace="com.ssc.mapper.FileTransferMapper">

<cache type="org.mybatis.caches.ehcache.EhcacheCache"/>

<sql id="ID"><if test="id!=null">
and ID= #{id}
</if>
</sql>

<sql id="IDList"><if test="idList != null"><foreach collection="idList" item="id" open="and id IN(" close=")" separator=",">
          #{id}     <!-- 				每个遍历需要拼接的串 --> 
</foreach></if></sql>

<sql id="itemDesc"><if test="itemDesc != null and itemDesc  !=''">
     and upper(b.Item_Desc) like '%${itemDesc}%'
</if>
</sql>
<sql id="fileName"><if test="fileName != null and fileName != ''">
     and upper(FILE_NAME) LIKE  '%${fileName}%'
</if>
</sql>
<sql id="projectName"><if test="projectName != null and projectName != ''">
   and  b.project_nm like '%${projectName}%'
</if>
</sql>
<sql id="orderBy">
<choose><when test="orderBy == null or orderBy == ''"> ORDER BY a.FILE_NAME</when>
<otherwise> ORDER BY ${orderBy} </otherwise></choose>
</sql>

<sql id="obselete">
<if test="isOldFile != null">
and IS_OBSELETE ='${isOldFile}'
</if>
</sql>

<sql id="projectID"><if test="projectId!=null">
and PROJECT_ID= #{projectId}
</if>
</sql>

<select id="getFileByID"  parameterType="Integer" resultType="ProjectAttachmentBeanCustom">
select id, PROJECT_ID projectId, FILE_NAME fileName, FILE_PATH filePath, FILE_DESC fileDesc, IS_OBSELETE isOldFile, UPLOAD_TIME createTime, user_nm userNm from PROJECT_ATTACHMENTS 
<where>
ID = #{id}
</where>
</select>

<select id="getFileListByIDList"  parameterType="ProjectAttachmentVo" resultType="ProjectAttachmentBeanCustom">
select id, PROJECT_ID projectId, FILE_NAME fileName, FILE_PATH filePath, FILE_DESC fileDesc, IS_OBSELETE isOldFile, UPLOAD_TIME createTime, user_nm userNm from PROJECT_ATTACHMENTS 
<where>
<include refid="IDList"></include>
</where>
</select>



<select id="getAllFilesByMultiParam"  parameterType="ProjectAttachmentVo" resultType="ProjectAttachmentBeanCustom">
SELECT a.ID,  a.PROJECT_ID projectId,  a.FILE_NAME fileName,  a.FILE_PATH filePath,  a.FILE_DESC fileDesc,  a.IS_OBSELETE isOldFile,  
a.UPLOAD_TIME createTime, a.user_nm userNm,  b.project_nm projectName,  b.Item_Desc projectItemDesc
FROM PROJECT_ATTACHMENTS a INNER JOIN PROJECT_STATUS b ON a.project_id=b.id
<where>
    a.IS_OBSELETE='N'
<include refid="itemDesc"></include>
<include refid="fileName"></include>
<include refid="projectName"></include>
</where>
<include refid="orderBy"></include>

</select>

<select id="getFilesByProjectID"  parameterType="Integer" resultType="ProjectAttachmentBeanCustom">
select ID, PROJECT_ID projectId, FILE_NAME fileName, FILE_PATH filePath, FILE_DESC fileDesc, IS_OBSELETE isOldFile, UPLOAD_TIME createTime, user_nm   userNm
from PROJECT_ATTACHMENTS 
<where>
IS_OBSELETE='N' 
and PROJECT_ID=#{id} 
</where>
ORDER BY UPLOAD_TIME DESC
</select>

<select id="getAllFilesForSpecifiedProject" parameterType="ProjectAttachmentVo" resultType="ProjectAttachmentBeanCustom">
select ID, PROJECT_ID projectId, FILE_NAME fileName, FILE_PATH filePath, FILE_DESC fileDesc, IS_OBSELETE isOldFile, UPLOAD_TIME createTime, user_nm userNm from PROJECT_ATTACHMENTS 
<where>
<include refid="projectID"></include>
<include refid="fileName"></include>
<include refid="obselete"></include>
</where>
</select>

<update id="updateFileDescriptionByID" parameterType="ProjectAttachmentBeanCustom">
update PROJECT_ATTACHMENTS
<set >
<if test="fileDesc != null">file_Desc=#{fileDesc}</if>
</set>
	<where>
	<include refid="ID"></include>
	</where>
</update>

<update id="updateFileToObselete" parameterType="ProjectAttachmentBeanCustom">
update PROJECT_ATTACHMENTS
<set >
IS_OBSELETE='Y'
</set>
	<where>
	<include refid="fileName"/>
	<include refid="projectID"/>
	</where>
</update>


<insert id="insertFileToDB" parameterType="ProjectAttachmentBeanCustom">
<selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
SELECT PROJECT_ATTACHMENT_ID_SEQ.nextVal as id from dual
</selectKey>
insert into PROJECT_ATTACHMENTS(ID, PROJECT_ID, FILE_NAME, FILE_PATH, FILE_DESC, IS_OBSELETE, UPLOAD_TIME, user_nm )values 
( #{id}, #{projectId},#{fileName},#{filePath},#{fileDesc},#{isOldFile},#{uploadTime},#{userNm})
</insert>



<delete id="deleteAttachmentByID" parameterType="ProjectAttachmentVo">
DELETE FROM PROJECT_ATTACHMENTS
<where>
<include refid="IDList"></include>
</where>
</delete>









	
</mapper>


